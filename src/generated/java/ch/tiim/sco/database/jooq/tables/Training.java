/**
 * This class is generated by jOOQ
 */
package ch.tiim.sco.database.jooq.tables;


import ch.tiim.sco.database.jooq.DefaultSchema;
import ch.tiim.sco.database.jooq.Keys;
import ch.tiim.sco.database.jooq.tables.records.TrainingRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Training extends TableImpl<TrainingRecord> {

	private static final long serialVersionUID = 21783122;

	/**
	 * The reference instance of <code>training</code>
	 */
	public static final Training TRAINING = new Training();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TrainingRecord> getRecordType() {
		return TrainingRecord.class;
	}

	/**
	 * The column <code>training.training_id</code>.
	 */
	public final TableField<TrainingRecord, Integer> TRAINING_ID = createField("training_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>training.name</code>.
	 */
	public final TableField<TrainingRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>training</code> table reference
	 */
	public Training() {
		this("training", null);
	}

	/**
	 * Create an aliased <code>training</code> table reference
	 */
	public Training(String alias) {
		this(alias, TRAINING);
	}

	private Training(String alias, Table<TrainingRecord> aliased) {
		this(alias, aliased, null);
	}

	private Training(String alias, Table<TrainingRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TrainingRecord> getPrimaryKey() {
		return Keys.PK_TRAINING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TrainingRecord>> getKeys() {
		return Arrays.<UniqueKey<TrainingRecord>>asList(Keys.PK_TRAINING);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Training as(String alias) {
		return new Training(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Training rename(String name) {
		return new Training(name, null);
	}
}
