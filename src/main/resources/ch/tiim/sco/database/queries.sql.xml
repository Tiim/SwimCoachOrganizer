<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<modules>
    <module name="Club">
        <entry name="add">
            INSERT INTO club (name, name_short, name_en, name_short_en, code, nationality, extern_id)
            VALUES (:name, :nameShort, :nameEn, :nameShortEn, :code, :nationality, :externId)
        </entry>
        <entry name="delete">
            DELETE FROM club
            WHERE club_id = :id
        </entry>
        <entry name="update">
            UPDATE club
            SET
            name = :name,
            name_short = :nameShort,
            name_en = :nameEn,
            name_short_en = :nameShortEn,
            code = :code,
            nationality = :nationality,
            extern_id = :externId
            WHERE club_id = :id
        </entry>
        <entry name="get_all">
            SELECT club_id, name, name_short, name_en, name_short_en, code, nationality, extern_id
            FROM club
        </entry>
    </module>
    <module name="ClubContent">
        <entry name="add">
            INSERT INTO club_content (club_id, team_id)
            VALUES (:club_id, :team_id)
        </entry>
        <entry name="delete">
            DELETE FROM club_content
            WHERE club_id = :club_id AND team_id = :team_id
        </entry>
        <entry name="get">
            SELECT team.team_id, team.name
            FROM club_content
            INNER JOIN team ON club_content.team_id = team.team_id
            WHERE club_id = :club_id
        </entry>
        <entry name="get_not">
            SELECT team.team_id, team.name
            FROM team
            WHERE NOT EXISTS (
            SELECT 1
            FROM club_content
            WHERE club_content.team_id = team.team_id AND club_content.club_id = :club_id
            )
        </entry>
        <entry name="delete_all">
            DELETE FROM club_content
            WHERE club_id = :club_id
        </entry>
    </module>
    <module name="Team">
        <entry name="add">
            INSERT INTO team (name)
            VALUES (:name)
        </entry>
        <entry name="delete">
            DELETE FROM team
            WHERE team_id = :id
        </entry>
        <entry name="update">
            UPDATE team
            SET name = :name
            WHERE team_id = :id
        </entry>
        <entry name="get_all">
            SELECT team_id, name
            FROM team
        </entry>
    </module>
    <module name="SetFocus">
        <entry name="add">
            INSERT INTO set_focus (name, abbr, notes)
            VALUES (:name, :abbr, :notes)
        </entry>
        <entry name="update">
            UPDATE set_focus
            SET name = :name, abbr = :abbr, notes = :notes
            WHERE focus_id = :id
        </entry>
        <entry name="delete">
            DELETE FROM set_focus
            WHERE focus_id = :id
        </entry>
        <entry name="get_all">
            SELECT focus_id, name, abbr, notes
            FROM set_focus
        </entry>
    </module>
    <module name="SetStroke">
        <entry name="add">
            INSERT INTO set_stroke (name, abbr, notes)
            VALUES (:name, :abbr, :notes)
        </entry>
        <entry name="update">
            UPDATE set_stroke
            SET name = :name, abbr = :abbr, notes = :notes
            WHERE stroke_id = :id
        </entry>
        <entry name="delete">
            DELETE FROM set_stroke
            WHERE stroke_id = :id
        </entry>
        <entry name="get_all">
            SELECT stroke_id, name, abbr, notes
            FROM set_stroke
        </entry>
    </module>
    <module name="Sets">
        <entry name="add">
            INSERT INTO sets (name, content, distance_f1, distance_f2, distance_f3, intensity,
            focus_id, stroke_id, notes, interval, is_pause)
            VALUES (:name, :content, :distance1, :distance2, :distance3, :intensity,
            :focus_id, :stroke_id, :notes, :interval, :is_pause)
        </entry>
        <entry name="update">
            UPDATE sets
            SET name = :name, content = :content, distance_f1 = :distance1,
                distance_f2 = :distance2, distance_f3 = :distance3, intensity = :intensity,
            focus_id = :focus_id, stroke_id = :stroke_id, notes = :notes,
                interval = :interval, is_pause = :is_pause
            WHERE set_id = :id
        </entry>
        <entry name="delete">
            DELETE FROM sets
            WHERE set_id = :id
        </entry>
        <entry name="get_all">
            SELECT set_id, sets.name, content, distance_f1, distance_f2, distance_f3, intensity,
                set_focus.focus_id, set_focus.name as focus_name, set_focus.abbr as focus_abbr,
                    set_focus.notes as focus_notes,
            set_stroke.stroke_id, set_stroke.name as stroke_name, set_stroke.abbr as stroke_abbr,
            set_stroke.notes as stroke_notes,
                sets.notes, interval, is_pause
            FROM sets
                LEFT OUTER JOIN set_focus ON sets.focus_id = set_focus.focus_id
            LEFT OUTER JOIN set_stroke ON sets.stroke_id = set_stroke.stroke_id
        </entry>
    </module>
    <module name="TeamContent">
        <entry name="add">
            INSERT INTO team_content (swimmer_id, team_id)
            VALUES (:swimmer_id, :team_id)
        </entry>
        <entry name="delete">
            DELETE FROM team_content
            WHERE swimmer_id = :swimmer_id AND team_id = :team_id
        </entry>
        <entry name="get">
            SELECT swimmer.swimmer_id, first_name, last_name, birthday, address,
                phone_private, phone_work, phone_mobile, email, license, is_female, notes
            FROM team_content
                INNER JOIN swimmer ON swimmer.swimmer_id = team_content.swimmer_id
            WHERE team_id = :team_id
        </entry>
        <entry name="get_not">
            SELECT swimmer.swimmer_id, first_name, last_name, birthday, address,
                phone_private, phone_work, phone_mobile, email, license, is_female, notes
            FROM swimmer
            WHERE NOT EXISTS (
                SELECT 1
                FROM team_content
                WHERE team_content.swimmer_id = swimmer.swimmer_id AND team_content.team_id = :team_id
            );
        </entry>
        <entry name="delete_all">
            DELETE FROM team_content
            WHERE team_id = :team_id
        </entry>
    </module>
    <module name="Swimmer">
        <entry name="add">
            INSERT INTO swimmer (first_name, last_name, birthday, address, phone_private,
                phone_work, phone_mobile, email, license, is_female, notes)
            VALUES (:first_name, :last_name, :birthday, :address, :phone_private,
                :phone_work, :phone_mobile, :email, :license, :is_female, :notes)
        </entry>
        <entry name="delete">
            DELETE FROM swimmer
            WHERE swimmer_id = :id
        </entry>
        <entry name="update">
            UPDATE swimmer
            SET first_name = :first_name, last_name = :last_name, birthday = :birthday,
                address = :address, phone_private = :phone_private, phone_work = :phone_work,
                phone_mobile = :phone_mobile, email = :email, license = :license,
                is_female = :is_female, notes = :notes
            WHERE swimmer_id = :id
        </entry>
        <entry name="get_between">
            SELECT swimmer_id, first_name, last_name, birthday, address, phone_private,
                phone_work, phone_mobile, email, license, is_female, notes
            FROM swimmer
            WHERE birthday BETWEEN :before AND :after
        </entry>
        <entry name="get_all">
            SELECT swimmer_id, first_name, last_name, birthday, address, phone_private,
                phone_work, phone_mobile, email, license, is_female, notes
            FROM swimmer
        </entry>
    </module>
    <module name="Training">
        <entry name="add">
            INSERT INTO training (date, team_id)
            VALUES (:date, :team_id)
        </entry>
        <entry name="update">
            UPDATE training
            SET date = :date, team_id = :team_id
            WHERE training_id = :id
        </entry>
        <entry name="delete">
            DELETE FROM training
            WHERE training_id = :id
        </entry>
        <entry name="get_all">
            SELECT training_id, date, team.team_id, team.name
            FROM training
                LEFT JOIN team ON team.team_id = training.team_id
        </entry>
    </module>
    <module name="TrainingContent">
        <entry name="add">
            INSERT INTO training_content (training_id, set_id, index)
            VALUES (:training_id, :set_id, :index)
        </entry>
        <entry name="delete">
            DELETE FROM training_content
            WHERE training_id = :training_id AND index = :index
        </entry>
        <entry name="get">
            SELECT sets.set_id, sets.name, content, distance_f1, distance_f2, distance_f3,
                intensity, set_focus.focus_id, set_focus.name as focus_name,
                set_focus.abbr as focus_abbr, set_focus.notes as focus_notes,
            set_stroke.stroke_id, set_stroke.name as stroke_name,
            set_stroke.abbr as stroke_abbr, set_stroke.notes as stroke_notes,
                sets.notes, interval, is_pause, index
            FROM training_content
                INNER JOIN sets ON training_content.set_id = sets.set_id
                    LEFT OUTER JOIN set_focus ON sets.focus_id = set_focus.focus_id
            LEFT OUTER JOIN set_stroke ON sets.stroke_id = set_stroke.stroke_id
            WHERE training_id = :training_id
        </entry>
        <entry name="delete_all">
            DELETE FROM training_content
            WHERE training_id = :training_id
        </entry>
        <entry name="update_index">
            UPDATE training_content
            SET index = (
                SELECT SUM(index)
                FROM training_content
                WHERE (index = :low OR index = :high) AND training_id = :training_id
            ) - index
            WHERE (index = :low OR index = :high) AND training_id = :training_id
        </entry>
    </module>
    <module name="Result">
        <entry name="add">
            INSERT INTO result (swimmer_id, meet, meet_date, swim_time, reaction_time, stroke, distance, course)
            VALUES (:swimmer_id, :meet, :meet_date, :swim_time, :reaction_time, :stroke, :distance, :course)
        </entry>
        <entry name="update">
            UPDATE result
            SET meet = :meet, meet_date = :meet_date, swim_time = :swim_time,
            reaction_time = :reaction_time, stroke = :stroke, distance = :distance,
            course = :course
            WHERE result_id = :id
        </entry>
        <entry name="delete">
            DELETE FROM result
            WHERE result_id = :id
        </entry>
        <entry name="get">
            SELECT result_id, meet, meet_date, swim_time, reaction_time, stroke, distance, course
            FROM result
            WHERE swimmer_id = :id
        </entry>
        <entry name="get_swimmer">
            SELECT swimmer.swimmer_id, swimmer.first_name, swimmer.last_name, swimmer.birthday, swimmer.address,
            swimmer.phone_private, swimmer.phone_work, swimmer.phone_mobile, swimmer.email, swimmer.license,
            swimmer.is_female, swimmer.notes
            FROM result
            INNER JOIN swimmer ON result.swimmer_id = swimmer.swimmer_id
            WHERE result.result_id = :result_id
        </entry>
    </module>
    <module name="Schedule">
        <entry name="add_schedule">
            INSERT INTO schedule (start_date, start_time, inter, duration, team_id)
            VALUES (:start_date, :start_time, :inter, :duration, :team_id)
        </entry>
        <entry name="delete_schedule">
            DELETE FROM schedule
            WHERE schedule_id = :schedule_id
        </entry>
        <entry name="update_schedule">
            UPDATE schedule
            SET start_date = :start_date, start_time = :start_time, inter = :inter, duration = :duration,
            team_id = :team_id
            WHERE schedule_id = :schedule_id
        </entry>
        <entry name="get_schedule">
            SELECT schedule_id, start_date, start_time, inter, duration, team.team_id, team.name
            FROM schedule
            INNER JOIN team
            ON schedule.team_id = team.team_id
            WHERE team.team_id = :team_id
        </entry>
        <entry name="get_all_schedules">
            SELECT schedule_id, start_date, start_time, inter, duration, team.team_id, team.name
            FROM schedule
            INNER JOIN team
            ON schedule.team_id = team.team_id
        </entry>
        <entry name="add_exception">
            INSERT INTO schedule_exception (schedule_id, day)
            VALUES (:schedule_id, :day)
        </entry>
        <entry name="delete_exception">
            DELETE FROM schedule_exception
            WHERE exception_id = :exception_id
        </entry>
        <entry name="update_exception">
            UPDATE schedule_exception
            SET schedule_id = :schedule_id, day = :day
            WHERE exception_id = :exception_id
        </entry>
        <entry name="get_exception_for_rule">
            SELECT exception_id, day,
            schedule.schedule_id, schedule.start_date, schedule.start_time, schedule.inter, schedule.duration,
            team.team_id, team.name
            FROM schedule_exception
            INNER JOIN schedule
            ON schedule.schedule_id = schedule_exception.schedule_id
            INNER JOIN team
            ON team.team_id = schedule.team_id
            WHERE schedule.schedule_id = :schedule_id
        </entry>
    </module>
</modules>